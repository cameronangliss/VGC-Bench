import numpy as np
import matplotlib.pyplot as plt

# Data definitions
algos = ["R", "MBP", "SH", "LLM", "SP", "FP", "DO", "BC", "BCSP", "BCFP", "BCDO"]

data_list = [
    np.array(
        [
            [np.nan, 0.061, 0.035, 0.24, 0.014, 0.015, 0.044, 0.064, 0.003, 0.006, 0.007],
            [0.939, np.nan, 0.361, 0.73, 0.211, 0.312, 0.283, 0.536, 0.099, 0.101, 0.178],
            [0.965, 0.639, np.nan, 0.89, 0.248, 0.286, 0.441, 0.562, 0.13, 0.148, 0.243],
            [0.76, 0.27, 0.11, np.nan, 0.05, 0.12, 0.14, 0.31, 0.01, 0.04, 0.08],
            [0.986, 0.789, 0.752, 0.95, np.nan, 0.628, 0.712, 0.83, 0.248, 0.324, 0.359],
            [0.985, 0.688, 0.714, 0.88, 0.372, np.nan, 0.458, 0.704, 0.125, 0.149, 0.212],
            [0.956, 0.717, 0.559, 0.86, 0.288, 0.542, np.nan, 0.629, 0.17, 0.221, 0.282],
            [0.936, 0.464, 0.438, 0.69, 0.17, 0.296, 0.371, np.nan, 0.092, 0.12, 0.153],
            [0.997, 0.901, 0.87, 0.99, 0.752, 0.875, 0.83, 0.908, np.nan, 0.508, 0.657],
            [0.994, 0.899, 0.852, 0.96, 0.676, 0.851, 0.779, 0.88, 0.492, np.nan, 0.66],
            [0.993, 0.822, 0.757, 0.92, 0.641, 0.788, 0.718, 0.847, 0.343, 0.34, np.nan],
        ]
    ),
    np.array(
        [
            [np.nan, 0.089, 0.037, 0.14, 0.015, 0.012, 0.02, 0.123, 0.004, 0.009, 0.021],
            [0.911, np.nan, 0.33, 0.71, 0.226, 0.242, 0.23, 0.612, 0.116, 0.116, 0.139],
            [0.963, 0.67, np.nan, 0.89, 0.324, 0.317, 0.371, 0.713, 0.22, 0.18, 0.269],
            [0.86, 0.29, 0.11, np.nan, 0.07, 0.09, 0.08, 0.22, 0.07, 0.02, 0.09],
            [0.985, 0.774, 0.676, 0.93, np.nan, 0.571, 0.578, 0.835, 0.306, 0.343, 0.447],
            [0.988, 0.758, 0.683, 0.91, 0.429, np.nan, 0.56, 0.834, 0.198, 0.251, 0.355],
            [0.98, 0.77, 0.629, 0.92, 0.422, 0.44, np.nan, 0.818, 0.222, 0.222, 0.355],
            [0.877, 0.388, 0.287, 0.78, 0.165, 0.166, 0.182, np.nan, 0.093, 0.072, 0.156],
            [0.996, 0.884, 0.78, 0.93, 0.694, 0.802, 0.778, 0.907, np.nan, 0.601, 0.631],
            [0.991, 0.884, 0.82, 0.98, 0.657, 0.749, 0.778, 0.928, 0.399, np.nan, 0.58],
            [0.979, 0.861, 0.731, 0.91, 0.553, 0.645, 0.645, 0.844, 0.369, 0.42, np.nan],
        ]
    ),
    np.array(
        [
            [np.nan, 0.081, 0.029, 0.2, 0.024, 0.02, 0.03, 0.103, 0.01, 0.009, 0.016],
            [0.919, np.nan, 0.327, 0.78, 0.246, 0.256, 0.314, 0.584, 0.164, 0.123, 0.159],
            [0.971, 0.673, np.nan, 0.89, 0.372, 0.4, 0.38, 0.73, 0.275, 0.261, 0.255],
            [0.8, 0.22, 0.11, np.nan, 0.14, 0.09, 0.15, 0.27, 0.02, 0.11, 0.1],
            [0.976, 0.754, 0.628, 0.86, np.nan, 0.497, 0.576, 0.803, 0.285, 0.295, 0.311],
            [0.98, 0.744, 0.6, 0.91, 0.503, np.nan, 0.534, 0.798, 0.322, 0.304, 0.319],
            [0.97, 0.686, 0.62, 0.85, 0.424, 0.466, np.nan, 0.752, 0.273, 0.26, 0.277],
            [0.897, 0.416, 0.27, 0.73, 0.197, 0.202, 0.248, np.nan, 0.129, 0.087, 0.176],
            [0.99, 0.836, 0.725, 0.98, 0.715, 0.678, 0.727, 0.871, np.nan, 0.501, 0.545],
            [0.991, 0.877, 0.739, 0.89, 0.705, 0.696, 0.74, 0.913, 0.499, np.nan, 0.479],
            [0.984, 0.841, 0.745, 0.9, 0.689, 0.681, 0.723, 0.824, 0.455, 0.521, np.nan],
        ]
    ),
    np.array(
        [
            [np.nan, 0.059, 0.038, 0.22, 0.041, 0.032, 0.051, 0.086, 0.019, 0.01, 0.02],
            [0.941, np.nan, 0.317, 0.8, 0.327, 0.305, 0.281, 0.584, 0.201, 0.184, 0.177],
            [0.962, 0.683, np.nan, 0.89, 0.442, 0.395, 0.435, 0.678, 0.307, 0.257, 0.29],
            [0.78, 0.2, 0.11, np.nan, 0.1, 0.07, 0.05, 0.31, 0.07, 0.04, 0.05],
            [0.959, 0.673, 0.558, 0.9, np.nan, 0.446, 0.478, 0.683, 0.293, 0.26, 0.292],
            [0.968, 0.695, 0.605, 0.93, 0.554, np.nan, 0.493, 0.716, 0.348, 0.287, 0.308],
            [0.949, 0.719, 0.565, 0.95, 0.522, 0.507, np.nan, 0.716, 0.326, 0.275, 0.339],
            [0.914, 0.416, 0.322, 0.69, 0.317, 0.284, 0.284, np.nan, 0.162, 0.166, 0.179],
            [0.981, 0.799, 0.693, 0.93, 0.707, 0.652, 0.674, 0.838, np.nan, 0.467, 0.498],
            [0.99, 0.816, 0.743, 0.96, 0.74, 0.713, 0.725, 0.834, 0.533, np.nan, 0.504],
            [0.98, 0.823, 0.71, 0.95, 0.708, 0.692, 0.661, 0.821, 0.502, 0.496, np.nan],
        ]
    ),
]
titles = ["1 team", "3 teams", "10 teams", "30 teams"]

# Plotting with minimal spacing and centered tick labels
fig, axes = plt.subplots(
    1, 4, figsize=(12, 13), gridspec_kw={"left": 0.05, "right": 0.88, "hspace": 0.2, "wspace": 0.3}
)
vmin, vmax = 0, 1
im = None
for ax, data, title in zip(axes.flat, data_list, titles):
    masked = np.ma.masked_invalid(data)
    im = ax.imshow(masked, vmin=vmin, vmax=vmax)
    ax.set_title(title)
    ax.set_xticks(range(len(algos)))
    ax.set_xticklabels(algos, rotation=45, ha="center", rotation_mode="anchor")
    ax.tick_params(axis="x", pad=10)
    ax.set_yticks(range(len(algos)))
    ax.set_yticklabels(algos)
    ax.grid(False)

# Add a colorbar on the right side
cbar_ax = fig.add_axes((0.9, 0.4, 0.02, 0.18))
assert im is not None
fig.colorbar(im, cax=cbar_ax, label="Win Rate")

plt.savefig("heatmaps.png")
